name: Publish

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: true
        type: string

jobs:
  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            files: |
              build/packages/MarkdownEdit*.deb
          - os: windows-latest
            files: |
              build/packages/MarkdownEdit*.exe
              build/packages/MarkdownEdit*.zip
#          - os: macos-latest
#            artifact_name: markdownedit.app
#            asset_name: markdownedit.app

    steps:
    - name: Checkout repo and submodules
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - if: contains( matrix.os, 'windows') || contains( matrix.os, 'macos')
      name: Install Qt on Windows and Mac
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.4.1

    - if: contains( matrix.os, 'ubuntu')
      name: Install Qt, enchant-2 and ECM on Linux
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev qtdeclarative5-dev qttools5-dev libqt5svg5-dev libenchant-2-dev qt5ct dpkg-dev extra-cmake-modules

    - name: Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j8
      shell: bash

    - name: Package
      run: |
        cmake --build . --target=package -j3

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        path: ${{ matrix.files }}

  publish:
    name: Create release and upload files
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    strategy:
      fail-fast: false
    steps:
    - name: Download files
      uses: actions/download-artifact@v3
      with:
        path: packages

    - name: Find all files
      id: files
      run: |
        echo "FILES<<EOF" >> $GITHUB_ENV
        find packages/ -name "*" -type f >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: true
        files: ${{ env.FILES }}
        draft: true
